#include<iostream>
#include <bits/stdc++.h>
using namespace std;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<double, pii> pdii;
typedef vector<int> vi;
typedef vector<pii> vii;
typedef long long ll;
typedef set<int> set1 ;

#define loop(i,n)          for(int i = 0; i < n; ++i)
#define lp(x, s, e)      for(int x = (s); x < (e); x++)
#define lpe(x, s, e)     for(int x = (s); x <= (e); x++)
#define MP make_pair
#define PB push_back
#define sizeofarr(a) (sizeof(a)/sizeof(a[0]))
#define len(s)   (int)s.length()
#define sz(v)    (int)v.size()
#define all(a)   a.begin(),a.end()
#define clr(x, val)	memset((x), (val), sizeof(x))
#define ln '\n'
#define INF 1e8
typedef unsigned long long ull;
typedef long long ll;

#define MAXNODES (100000)+9
vector<vi> edges (MAXNODES);
vector<set1> edges2 (MAXNODES);
bool visited2 [50+1];
int a [10000+2];
long dp[10000+2][10000+2];
int n , k ;
int mod(int a, int b) {
    return (((a % b) + b) % b) ;
}
  int solve (int i , int sum) {
      if (i == n && sum==0)
          return 1;
      if(i>=n)
          return 0 ;
      if (dp[i][sum] != -1)
          return dp[i][sum];
          return dp[i][sum] =max(solve(i+1,mod(sum+a[i],k)),solve(i+1,mod(sum-a[i],k)));
      }


int main () {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
 //  freopen ("input.txt","r",stdin);
   // freopen ("output.txt","w",stdout);
int t ;
cin>>t ;
while(t--) {
    cin >> n >> k;
    loop(i, n)cin >> a[i];
loop(i,n)
loop(j,k)
dp[i][j]= -1 ;
if (solve(0, 0))
        cout<<"Divisible\n";
    else
        cout<<"Not divisible\n";

}

}
